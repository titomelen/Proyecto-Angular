// Mixins


// Box-Shadow
// --------------------------------------------------

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $color; /* Chrome 4-9, Safari 3.1-5, iOS 3.2-4.3, Android 2.1-3, BlackBerry 7 */
        -moz-box-shadow: inset $top $left $blur $color; /* FireFox 3.5-3.6 */
        box-shadow: inset $top $left $blur $color; /* W3C - Chrome 10+, Safari 5.1+, FF 4+, IE 9+, Opera 11.5+, iOS 5+, Android 4+, BlackBerry 10+ */
    } @else {
        -webkit-box-shadow: $top $left $blur $color; /* Chrome 4-9, Safari 3.1-5, iOS 3.2-4.3, Android 2.1-3, BlackBerry 7 */
        -moz-box-shadow: $top $left $blur $color; /* FireFox 3.5-3.6 */
        box-shadow: $top $left $blur $color; /* W3C - Chrome 10+, Safari 5.1+, FF 4+, IE 9+, Opera 11.5+, iOS 5+, Android 4+, BlackBerry 10+ */
    }
}

@mixin box-shadow-defined($shadow) {
    -webkit-box-shadow: $shadow; /* Chrome 4-9, Safari 3.1-5, iOS 3.2-4.3, Android 2.1-3, BlackBerry 7 */
    -moz-box-shadow: $shadow; /* FireFox 3.5-3.6 */
    box-shadow: $shadow; /* W3C - Chrome 10+, Safari 5.1+, FF 4+, IE 9+, Opera 11.5+, iOS 5+, Android 4+, BlackBerry 10+ */
}


// User Select
// --------------------------------------------------

@mixin user-select-mixin() {
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
    -khtml-user-select: none; /* Konqueror HTML */
    -moz-user-select: none; /* Old versions of Firefox */
    -ms-user-select: none; /* Internet Explorer/Edge */
    user-select: none; /* Chrome, Edge, Opera and Firefox */
}


// Display Grid
// --------------------------------------------------

// Ensure CSS grid works with IE 11 spec.
// https://css-tricks.com/browser-compatibility-css-grid-layouts-simple-sass-mixins/
// sass-lint:disable no-vendor-prefixes, no-duplicate-properties
@mixin display-grid {
    display: -ms-grid;
    display: grid;
}

// $columns values should be delimited by a space
@mixin grid-template-columns($columns...) {
    -ms-grid-columns: $columns;
    grid-template-columns: $columns;
}

// $rows values should be delimited by a space
@mixin grid-template-rows($rows...) {
    -ms-grid-rows: $rows;
    grid-template-rows: $rows;
}

// Can be used in combination with above grid-template-X mixins.
// These result in the same output:
// @include grid-template-columns(10px grid-repeat(4, 20px) 30px);
// @include grid-template-columns(10px 20px 20px 20px 20px 30px);
@function grid-repeat($repeat, $stuff: 1fr) {
    $list: ();

    @for $i from 1 through $repeat {
        $list: append($list, $stuff, space);
    }

    @return $list;
}

@mixin grid-column($col-start, $col-end) {
    -ms-grid-column: $col-start;
    -ms-grid-column-span: $col-end - $col-start;
    grid-column: #{$col-start} / #{$col-end};
}

@mixin grid-row($row-start, $row-end) {
    -ms-grid-row: $row-start;
    -ms-grid-row-span: $row-end - $row-start;
    grid-row: #{$row-start} / #{$row-end};
}

@mixin grid-align-self($value) {
    -ms-grid-row-align: $value;
    align-self: $value;
}

@mixin grid-justify-self($value) {
    -ms-grid-column-align: $value;
    justify-self: $value;
}

@mixin grid-child ($col-start, $col-end, $row-start, $row-end) {
    -ms-grid-column: $col-start;
    -ms-grid-column-span: $col-end - $col-start;
    -ms-grid-row: $row-start;
    -ms-grid-row-span: $row-end - $row-start;
    grid-column: #{$col-start}/#{$col-end};
    grid-row: #{$row-start}/#{$row-end};
}